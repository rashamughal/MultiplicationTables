package com.example.multiplicationtables;

import static com.example.multiplicationtables.R.id.myListView;
import static com.example.multiplicationtables.R.id.seekBar;

import androidx.appcompat.app.AppCompatActivity;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.SeekBar;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;

public class MainActivity extends AppCompatActivity {

    //declaring String Type array adapter
    ArrayAdapter<String> arrayAdapter;

    //declaring ArrayList of type String of name tableValues
    ArrayList<String> tableValues;

    //declaring listview and textview
    ListView MylistView;
    TextView textView;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //locating listview by its id
        MylistView=findViewById(R.id.myListView);

        //initializing tableValues arraylist for adding tableValues in arraylist
        tableValues=new ArrayList<>();

        //initializing arrayAdapter , making its object, "this" refers to the instance of the current activity( in which the code is written)
        //which is "MainActivity" , " android.R.layout.simple_list_item_1" is built in layout which will set each item of
        //listview in a single line, passing the source "tableValues", from this source array adapter will pull the content of this source
        // in the ListView and in this way items will be added to listview and will show on the screen.
        arrayAdapter=new ArrayAdapter<>(this,  android.R.layout.simple_list_item_1, tableValues);

        //finding view by its id, here seekBar is found by its id, basically initializing the seekBar
        SeekBar seekBar1=findViewById(R.id.seekBar);

        //initializing the textview, by finding view by its id
        textView=findViewById(R.id.textView2);

        //function updateTableValues(2) is called by passing it 2, 2 is passed to dynamically generate the table of 2
        updateTableValues(2);

        // Setting adapter after updating data,
        MylistView.setAdapter(arrayAdapter);

        // setting the max value of seekBar to 18
        seekBar1.setMax(18);

        //what should be done when the seekbar is moved and left at position, for this on seekBar ,"setOnSeekBarChangeListener" method is used
        //and an anonymous class object is passed to the method which is" new SeekBar.OnSeekBarChangeListener()",
        //OnSeekBarChangeListener is a interface o its methods are overidden here, methods are generated by the passed object.
        seekBar1.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            //in running app, when you move/drag seekbar leave it at a position, the seekbar is passed to this
            //function, progress is passed, true or false is passed to "fromUser"(means that either the change is initiated by the user or not
            //progress:Represents the current progress value of the SeekBar.This value is an integer ranging from
            // 0 to the maximum value set for the SeekBar.
            // fromUser: Indicates whether the progress change was initiated by the user (true) or programmatically (false).

            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                int number;
                number=progress + 2;
                updateTableValues(number);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
            //seekBar: Represents the SeekBar instance that triggered the event. This parameter is useful
            // if you have multiple SeekBars and want to differentiate between them.
        });


    }

    //this is a method name updateTableValues, and a number, whose table would be be generated programmatically, is passed
    // int number is the the parameter of function
    public void updateTableValues(int number){
        //clearing the existing items in the arraylist, here(existing table of number for e.g 2, 3,4, 5, 6.....20)
        tableValues.clear();
        //setting the text of textView, by setText function
        textView.setText("Table Of "+ number);
        //result is variable initialized to 1
        int result=1;
        for (int index = 1; index <= 10; index++) {
            //result is variable for storing result, when the number(whose table has to print) multiplies with index for e.g (2 x 4 =8),
            // basically this part is generating table of number(2,3,4,5..............20)
            result = number * index;
            //addng the values in the arraylist tableValues
            tableValues.add(number+" x " + index + " = " + result);
        }
        //MylistView.setAdapter(arrayAdapter); // Setting adapter after updating data
        arrayAdapter.notifyDataSetChanged(); // Notify adapter about the data change, BECAUSE adapter is not set on ListView in this function, adapter is set on listVIEW IN ONcreate function,
        // so notifyDataSetChaned() will notify adapter about changed data.
    }

}